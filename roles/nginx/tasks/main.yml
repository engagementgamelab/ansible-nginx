---

# - name: Install role dependencies
#   apt:
#     name: 'python-passlib'
#     state: 'present'
#   when: nginx_basic_auth

# - name: Install nginx
#   apt:
#     name: 'nginx'
#     state: 'present'
#   when: nginx_install_service
#   notify:
#     - Test nginx and restart

# - name: Create default nginx directories
#   file:
#     path: '{{ item }}'
#     state: 'directory'
#     owner: 'root'
#     group: 'root'
#     mode: '0755'
#   with_items:
#     - '/usr/share/nginx/html'
#     - '{{ nginx_letsencrypt_root }}'
#     - '/etc/nginx/sites-available'
#     - '/etc/nginx/sites-enabled'
#     - '/etc/nginx/conf.d'
#     - '/etc/nginx/ssl'

# - name: Remove default site
#   file:
#     path: '{{ item }}'
#     state: 'absent'
#   with_items:
#     - '/var/www/html'
#     - '/etc/nginx/sites-enabled/default'
#     - '/etc/nginx/sites-available/default'
#   notify:
#     - Test nginx and reload

# - name: Configure nginx
#   template:
#     src: 'etc/nginx/nginx.conf.j2'
#     dest: '/etc/nginx/nginx.conf'
#     group: 'root'
#     owner: 'root'
#     mode: '0644'
#   register: nginx_register_nginx_config
#   notify:
#     - Test nginx and reload

- debug: var=ssl_domains
- name: Generate self signed SSL certificates via letsencrypt (this can take a while)
  shell: "/opt/letsencrypt/letsencrypt-auto certonly -n --webroot -w /tmp/letsencrypt-auto -m {{ letsencrypt_email }} --agree-tos -d {{ app.domains[0] }} -d {{ app.domains[1] }}"
  args:
    creates: '/etc/letsencrypt/live/{{ app.domains[0] }}'
  async: 60
  poll: 60
  notify:
    - Test nginx and restart

- name: Generate X bit dhparam.pem file (this may take a while)
  command: openssl dhparam -out /etc/ssl/certs/dhparam.pem {{ nginx_ssl_dhparam_bits }}
  args:
    creates: '/etc/ssl/certs/dhparam.pem'
  notify:
    - Test nginx and restart

# - name: Create basic auth entries
#   htpasswd:
#     path: '/etc/nginx/.htpasswd'
#     name: '{{ item.user }}'
#     password: '{{ item.password }}'
#     crypt_scheme: 'sha512_crypt'
#     group: 'root'
#     owner: 'root'
#     mode: '0644'
#   with_items: '{{ nginx_basic_auth }}'

- name: Configure sites-enabled (vhosts)
  template:
    src: 'etc/nginx/sites-available/default.conf.j2'
    dest: '/etc/nginx/sites-available/{{ app.domains[0] }}'
    group: 'root'
    owner: 'root'
    mode: '0644'
  # debug: var=item
  # with_dict: '{{ app }}'
  register: nginx_register_vhost_config
  notify:
    - Test nginx and reload

- name: Symlink sites-available to sites-enabled
  file:
    src: '/etc/nginx/sites-available/{{ app.domains[0] }}'
    dest: '/etc/nginx/sites-enabled/{{ app.domains[0] }}'
    state: 'link'
  notify:
    - Test nginx and restart

- name: Forcefully restart nginx
  service:
    name: 'nginx'
    state: 'restarted'
  when: (nginx_register_vhost_config | changed)
