# {{ ansible_managed }}

{% set item = (nginx_default_sites['default'] | combine(app, recursive=True)) %}

server {

  # For legacy agent detect
  set $legacy_browser 0;

  listen {{ item.listen_http }}{{ ' default deferred' if item.default_server else '' }};
  server_name {{ item.domains | join(' ') }};

  location /.well-known/acme-challenge/ {

    default_type "text/plain";
    root /tmp/letsencrypt-auto;

  }

  # All other traffic
  location / {

    ## redirect http to https ##
    rewrite ^ https://$server_name$request_uri? permanent;

  }

}

# Secure server is setup after certbot issues cert
# Secure server
server {

  listen {{ item.listen_https }} ssl{{ ' default deferred' if item.default_server else '' }};
  server_name {{ item.domains[0] }} www.{{ item.domains[0] }};

  ssl_certificate /etc/letsencrypt/live/{{ item.domains[0] }}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/{{ item.domains[0] }}/privkey.pem;
  ssl_trusted_certificate /etc/letsencrypt/live/{{ item.domains[0] }}/chain.pem;

  ssl_dhparam /etc/ssl/certs/dhparam.pem;

  ssl_protocols {{ item.ssl.protocols }};
  ssl_prefer_server_ciphers {{ item.ssl.prefer_server_ciphers }};
  ssl_ciphers {{ item.ssl.ciphers }};
  ssl_session_cache {{ item.ssl.session_cache }};
  ssl_session_timeout {{ item.ssl.session_timeout }};
  ssl_stapling {{ item.ssl.ssl_stapling }};
  ssl_stapling_verify {{ item.ssl.ssl_stapling_verify }};

  error_page 404 @error;
  error_page 500 502 503 504 @500;

  # Page for legacy agents
  location /unsupported {
    root /srv/{{item.root_dir}}/source/client/static;

    try_files $uri $uri.html $uri/unsupported.html /unsupported.html;
  }

  # Handle legacy/unsupported agent
  if ($outdated = 1) {
     set $legacy_browser 1;
  }

  if ($uri = '/unsupported') {
     set $legacy_browser 0;
  }

  if ($legacy_browser = 1) {
      rewrite ^ http://$server_name/unsupported;
  }
  
  location / {

      # Send user to error page via 404 block if dist/ dir missing (site is deploying)
      if (!-d /srv/{{item.root_dir}}/source/client/dist) {
        return 404;
      }

      proxy_pass http://127.0.0.1:{{ item.server_port }};
      proxy_http_version 1.1;

      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;

      proxy_cache_bypass $http_upgrade;
      proxy_intercept_errors on;

      root /srv/{{item.root_dir}}/source/client/dist;

      try_files $uri $uri.html $uri/index.html /index.html;

   }

  # CMS and API blocks
  location ^~ /keystone/ {

      proxy_pass http://127.0.0.1:{{ item.api_port }}/keystone/;
      proxy_http_version 1.1;

      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host localhost;

      proxy_cache_bypass $http_upgrade;

      client_max_body_size 500M;
  }

  # Auto0 callback
  location ^~ /callback/ {

      proxy_pass http://127.0.0.1:{{ item.api_port }}/callback/;
      proxy_http_version 1.1;

      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host localhost;

      proxy_cache_bypass $http_upgrade;

  }

  location ^~ /cms/ {

      proxy_pass http://127.0.0.1:{{ item.api_port }}/cms/;
      proxy_http_version 1.1;

      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host localhost;

      proxy_cache_bypass $http_upgrade;

  }

  location ^~ /api/ {

      proxy_pass http://127.0.0.1:{{ item.api_port }}/api/;
      proxy_http_version 1.1;

      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host localhost;

      proxy_cache_bypass $http_upgrade;

  }

  location @500 {
      root /srv/{{item.root_dir}}/source/client/static;
      index 50x.html;
      break;
  }

  location @error {
      root /srv/{{item.root_dir}}/source/client/static;

      # this page is either 404 or 'downtime' message, toggled via toggledowntime.sh
      try_files /error.html =404;
      break;
  }

}